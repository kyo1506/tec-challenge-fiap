name: CI/CD para Produção

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  ECR_REPOSITORY: fiap-aws/tec-challenge
  EKS_CLUSTER_NAME: tec-challenge-fiap-cluster
  AWS_REGION: sa-east-1

jobs:
  build-and-deploy:
    name: Build and Deploy to Production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Configure Kubectl for EKS
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: Deploy to EKS
        run: |
          # Substitui o placeholder no arquivo de produção
          # Use 'g' para substituir todas as ocorrências e 's' para substituir
          sed -i 's|IMAGE_TAG_PLACEHOLDER|${{ steps.build-image.outputs.image }}|g' k8s/production/deployment.yaml
          
          # Aplica todos os arquivos no namespace de produção
          kubectl apply -f k8s/production/ --namespace=production